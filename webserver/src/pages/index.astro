---
import { SITE } from '~/config.mjs';
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import BarChartRace from '~/components/BarChartRace.astro';
import MostListenedTrack from '~/components/MostListenedTrack.astro';
import SleepStatistics from '~/components/SleepStatistics.astro';
import Map from '~/components/Map.astro';
import Radar from '~/components/Radar.astro';
import VizLayout from '~/layouts/VizLayout.astro';
import VisitedCities from '~/components/VisitedCities.astro';
import WordCloud from '~/components/WordCloud.astro';

const meta = {
  title: SITE.title,
  description: SITE.description,
  dontUseTitleTemplate: true,
};
---

<Layout {meta}>
  <div class="flex items-center justify-center flex-col">
    <embed src={'decoration.html'} height="170" width="300" title="decoration" />
  </div>

  <!-- Hero Widget ******************* -->
  <Hero>
    <Fragment slot="title">Spotify twisters</Fragment>

    <Fragment slot="subtitle">
      <span class="hidden sm:inline">
        <span class="font-semibold">SpotifyTwister</span> is a research tool built by EPFL students to learn more about how
        is your personal data being used by Spotify.
      </span>
      
      
      <div>
        <input type="file" id="input-file" class="
        text-sm 
        text-grey-500
        file:text-sm 
        file:font-medium
        file:bg-blue-50 file:text-blue-700
        file:mr-5 
        file:py-2 
        file:px-6
        file:rounded-full file:border-0
        hover:file:cursor-pointer 
        hover:file:bg-amber-50
        hover:file:text-amber-700" multiple/>
      </div>
      <div class="mt-16" id="pre-content">
      <p style="display: block;" class=" font-light cursor-pointer text-blue-500 underline hover:underline">
        <a href="https://support.spotify.com/us/article/data-rights-and-privacy-settings/">
          To use this application, please clicke here to ask Spotify for your data.
        </a>
      </p>

      <p class="bg-slate-50 rounded p-4 shadow-sm mt-12 font-light text-black/70">
        The General Data Protection Regulation (GDPR) was implemented by the European Union on May 25, 2018, to enhance data protection. The GDPR grants individuals the right to access and download their personal data, enabling them to review and understand how their information is being processed. 
      </p>
      </div>
    </Fragment>
  </Hero>
  <div id="content" style="display: none">
    <div class="flex items-center justify-center flex-col w-full">
      <MostListenedTrack />
    </div>
    <VizLayout title={"Visited cities"} 
    vizText={"In order to show the location of the cities, we use the ip-api.com api to obtain the approximate location with the ip_addr_decrypted."}
    reverse={true} 
    dataUsed={{country: "BR", ms_played: 1500, tz: "2012/10/22", decrypted_ip_addr: "129.34.29.28"}}>
      <VisitedCities />
    </VizLayout>
      <VizLayout 
      title={"Most listened artists"} 
      reverse={false} 
      dataUsed={{tz: "2019/10/22", ms_played: 1500}}
      vizText={"We use the number of ms_played and the listening dates in order to show this graph!"}
      >
        <BarChartRace />
      </VizLayout>
      <VizLayout title={"Countries visited"} 
      reverse={true} 
      dataUsed={{country: "BR", ms_played: 1500, tz: "2012/10/22"}}
      vizText={"We use only the country and the number of ms_played in order to show the countries visited. Then, we map the country code to its corresponding centered coordinates."}

      >
        <Map />
      </VizLayout>
      <VizLayout title={"Mean listening times per weekday"} 
      vizText={"We group all the records by day of the week and average out the ms_played times!"}

      reverse={false} 
      dataUsed={{ms_played: 1500, tz: "2012/10/22"}}>
        <Radar />
      </VizLayout>
      <VizLayout title={"Your sleep analysis"} 
      vizText={"One can infer the sleep time of a person by looking at the time when the person stops listening to music and when the person starts listening to music again. We process the data in a smart manner, by filtering outliers and keeping only what looks like real sleep times."}
      reverse={true} 
      dataUsed={{ms_played: 1500, tz: "2012/10/22"}}>
        <SleepStatistics />      
    </VizLayout>
    <VizLayout
    vizText={""}

     title={""} reverse={false} 
      dataUsed={{ms_played: 1500, tz: "2012/10/22"}}>
        <WordCloud />
    </VizLayout>

</div>


  <script>
  var mergedData = []; // Globally accessible variable to store the parsed data

    document.getElementById('input-file').addEventListener('change', function(e) {
      if (e.target.files.length > 0) {
        var files = e.target.files;
        var count = 0; // Counter to track the number of files processed

        for (var i = 0; i < files.length; i++) {
          var file = files[i];
          var reader = new FileReader();

          reader.addEventListener("load", function(e) {
            var fileData = JSON.parse(e.target.result);
            mergedData = [...mergedData, ...fileData]
            count++;
            // Check if all files have been processed
            if (count === files.length) {
              mergedData = mergedData.map((data) => ({
                  ...data,
                  parsedDate: new Date(data.ts)
              }))
              mergedData.sort((a,b) => a.parsedDate - b.parsedDate)
              // Dispatch a custom event to notify the completion of file parsing
              var event = new CustomEvent('fileParsingComplete', { detail: mergedData });
              document.dispatchEvent(event);
            }
          }, false);

          if (file) {
            reader.readAsText(file);
          }
        }
      }
    });

  //COPY THIS CODE HERE IN YOUR COMPONENT/
    // Event listener to handle the completion of file parsing
  document.addEventListener('fileParsingComplete', function(event) {
    var parsedData = event.detail;
    callbackParsing(parsedData);
  });

  async function callbackParsing(data) {
    // Use the parsed data in your function
    console.log("Parsed Data: ", data);
    document.getElementById('link-spotify-download').style.display = "none";
    // Perform further processing or actions}
  }
  //COPY THIS CODE HERE IN YOUR COMPONENT */

  </script>
</Layout>
